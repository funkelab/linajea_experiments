README: Cell Tracking Experiments

The main code base for the linajea cell tracking pipeline is at:
www.github.com/funkelab/linajea. This repository contains ground truth, models,
results, and scripts used to run experiments, plus some useful auxiliary
scripts.  Here is an overview by directory - most directories have their own,
more detailed README for more information:

data:
Containing ground truth sparse point annotations for mouse, drosophila, and
zebrafish datasets. Actual data is too large to contain here - please contact
us to obtain a copy.

evaluate:
Scripts to get results out of MongoDB and write to CSV for visualization, or
create visualizations from those CSVs.

linajea_utils:
Useful scripts packaged up for import to other experiments scripts (e.g. create
a foreground mask, remove nodes outwide a mask, write grid search config
files).

results:
Reconstructed tracks extracted from our MongoDB to CSVs.

run_scripts:
Scripts to run the cell tracking experiments, including prediction, extraction, and ILP solving.

unet_setups:
Scripts to create and train unet models, as well as the configurations and
trained models used in our experiments.

visualize:
Scripts to visualize data in neuroglancer and write tracks into MaMuT xml format.



Jupytext Note: Some python files are actually jupyter notebooks that have been converted to plain
python scripts using jupytext.

To view scripts as Jupyter Notebooks:

1) Install jupytext (available on pip, conda)
2) (Optional) Create an .ipynb file by calling `jupytext --to notebook <script>.py`
3) Start a jupyter server and navigate to the file in the web UI
4) Click on the file. It will automatically open the .py file as a notebook if you click on it,
although it will still save as plain text (as opposed to storing the output of cells).
If you chose to create an .ipynb file, it will automatically pair them and keep them in sync.

You can even edit the .py file in a text editor, and then refresh the view to see the changes
without losing your variables.
Turn off autosave in the jupyter view if you want to edit the .py file to avoid getting
out of sync. 
