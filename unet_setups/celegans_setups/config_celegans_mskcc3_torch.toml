[general]
logging = 20
db_host = "mongodb://linajeaAdmin:FeOOHnH2O@funke-mongodb4/admin?replicaSet=rsLinajea"
seed = 42
setup_dir = "/groups/funke/home/hirschp/linajea_experiments/unet_setups/celegans_setups/experiments/mskc_test_dl_1"
sparse = false

[model]
train_input_shape = [ 7, 40, 148, 148,]
# train_input_shape = [ 7, 40, 260, 260,]
predict_input_shape = [ 7, 80, 260, 260,]
unet_style = "split"
num_fmaps = [12, 12]
# fmap_inc_factors = [4, 4, 8]
fmap_inc_factors = 4
downsample_factors = [[ 1, 2, 2,],
                      [ 1, 2, 2,],
                      [ 2, 2, 2,],]
# kernel_size_down = [[ [3, 3, 3], [3, 3, 3],],
#                     [ [3, 3, 3], [3, 3, 3],],
#                     [ [3, 3, 3], [3, 3, 3],],
#                     [ [3, 3, 3], [3, 3, 3],],]
kernel_size_down = [[ [3, 3, 3, 3], [3, 3, 3, 3],],
                    [ [3, 3, 3, 3], [3, 3, 3],],
                    [ [3, 3, 3], [3, 3, 3],],
                    [ [3, 3, 3], [3, 3, 3],],]
# kernel_size_down = [[ [3, 3, 3], [3, 3, 3],],
#                     [ [3, 3, 3], [3, 3, 3],],
#                     [ [3, 3, 3], [3, 3, 3, 3],],
#                     [ [3, 3, 3, 3], [3, 3, 3, 3],],]
kernel_size_up = [[ [3, 3, 3], [3, 3, 3],],
                  [ [3, 3, 3], [3, 3, 3],],
                  [ [3, 3, 3], [3, 3, 3],],]
# constant_upsample = true
# upsampling = "pixel_shuffle"
# upsampling = "trilinear"
upsampling = "sep_transposed_conv"
average_vectors = false
# nms_window_shape = [ 3, 11, 11,]
nms_window_shape = [ 3, 9, 9,]
path_to_script = "/groups/funke/home/hirschp/linajea_experiments/unet_setups/celegans_setups/mknet_celegans.py"
cell_indicator_weighted = 0.01
cell_indicator_cutoff = 0.01
# cell_indicator_weighted = true
latent_temp_conv = false
train_only_cell_indicator = false

[train]
val_log_step = 25
# radius for binary map -> *2 (in world units)
# in which to draw parent vectors (not used if use_radius)
parent_radius = [ 0.1, 8.0, 8.0, 8.0,]
# upper bound for dist cell moved between two frames (needed for context)
move_radius = 25
# sigma for Gauss -> ~*4 (5 in z -> in 3 slices) (not used if use_radius)
rasterize_radius = [ 0.1, 5.0, 3.0, 3.0,]
cache_size = 9
parent_vectors_loss_transition_offset = 20000
parent_vectors_loss_transition_factor = 0.001
#use_radius = true
path_to_script = "/groups/funke/home/hirschp/linajea_experiments/unet_setups/celegans_setups/train_val_celegans_torch_dl.py"
max_iterations = 400002
checkpoint_stride = 10000
snapshot_stride = 5000
profiling_stride = 1000
use_auto_mixed_precision = true
use_swa = true
swa_every_it = false
swa_start_it = 49999
swa_freq_it = 1000
use_grad_norm = true

[train.use_radius]
30 = 20
70 = 15
100 = 13
130 = 11
180 = 10
270 = 8
9999 = 7

[optimizerTorch]
optimizer = "Adam"
# optimizer = "SGD"

[extract]
block_size = [ 5, 512, 512, 512,]

[solve]
from_scratch = true
non_minimal = false
greedy = false
# write_struct_svm = "ssvm_ckpt_200000"
check_node_close_to_roi = false
add_node_density_constraints = false
# random_search = false
# [solve.add_node_density_constraints]
# 30 = 13
# 60 = 11
# 10000 = 7


[[solve.parameters]]
# # # ssvm 240k w class id 507 (wo class )
weight_node_score =   -16.786125363574673        
selection_constant =  8.893522542354866  
track_cost =          20.675083335777686 
# disappear cost      -0.0               
weight_division =     -8.260920358667896 
division_constant =   5.9535746121046165 
weight_child =        1.003401421433546  
weight_continuation = -1.0264581546174496
weight_edge_score =   0.4254227576366175   

cell_cycle_key = '201112_063001/test/10000_'
block_size = [15, 512, 512, 712]
context = [2, 100, 100, 100]



[solve.parameters_search_grid]

weight_node_score =   [-13, -17, -21]
selection_constant =  [6, 9, 12]
# track_cost =          [7, 11, 15]
track_cost =          [7,]
# disappear cost      -0.0               
# weight_division =     [-8, -11, 0]
# division_constant =   [6.0, 2.5, 1]
# weight_child =        [0.0, 1.0, 2.0]
# weight_continuation = [0.0, -1.0]
# weight_edge_score =   [0.1, 0.35]
weight_division =     [-8, -11]
# division_constant =   [6.0, 2.5, 1.0]
division_constant =   [6.0, 2.5]
weight_child =        [1.0, 2.0]
weight_continuation = [-1.0]
# weight_edge_score =   [0.1, 0.35]
weight_edge_score =   [0.35]

# cell_cycle_key = ['201112_063001/test/10000_', '']
# cell_cycle_key = ['201112_063001/test/10000_'] #
val = [true]
block_size = [[15, 512, 512, 712]]
context = [[2, 100, 100, 100]]
num_configs = 25


[evaluate]
from_scratch = false

[predict]
path_to_script = "/groups/funke/home/hirschp/linajea_experiments/unet_setups/celegans_setups/predict_celegans_torch.py"
path_to_script_db_from_zarr = "/groups/funke/home/hirschp/linajea_experiments/unet_setups/celegans_setups/write_cells_celegans.py"
output_zarr_prefix = "/nrs/funke/hirschp/linajea_experiments"
write_to_zarr = false
write_to_db = true
write_db_from_zarr = false
processes_per_worker = 1

[train_data]
voxel_size = [ 1, 5, 1, 1,]
[[train_data.data_sources]]
gt_db_name = "linajea_celegans_emb1_fixed"

[train_data.data_sources.datafile]
filename = "/nrs/funke/hirschp/mskcc_emb1"
group = "volumes/raw_nested"
# [[train_data.data_sources]]
# gt_db_name = "linajea_celegans_emb3_fixed"

# [train_data.data_sources.datafile]
# filename = "/nrs/funke/hirschp/mskcc_emb3"
# group = "volumes/raw_nested"

[test_data]
checkpoint = 400000
cell_score_threshold = 0.2
voxel_size = [ 1, 5, 1, 1,]
[[test_data.data_sources]]
gt_db_name = "linajea_celegans_emb3_fixed"

[test_data.data_sources.datafile]
filename = "/nrs/funke/hirschp/mskcc_emb3"
group = "volumes/raw_nested"

[validate_data]
checkpoints = [ 400000,]
cell_score_threshold = 0.2
voxel_size = [ 1, 5, 1, 1,]
[[validate_data.data_sources]]
gt_db_name = "linajea_celegans_emb_fixed"

[validate_data.data_sources.datafile]
filename = "/nrs/funke/hirschp/mskcc_emb"
group = "volumes/raw_nested"

[train.job]
num_workers = 16
queue = "gpu_tesla"

[train.augment]
divisions = true
reject_empty_prob = 0.9
normalization = "minmax"
perc_min = "perc0_01"
perc_max = "perc99_99"
norm_bounds = [ 2000, 7500,]
point_balance_radius = 75

[optimizerTorch.kwargs]
lr = 5e-5
betas = [0.95, 0.999]
eps = 1e-8
amsgrad = false
# weight_decay = 1e-4
# momentum = 0.9
# nesterov = true

[extract.edge_move_threshold]
50 = 45
1000 = 35

[extract.job]
num_workers = 16
queue = "local"

[solve.job]
num_workers = 4
queue = "local"

[evaluate.parameters]
matching_threshold = 15
sparse = false

[evaluate.job]
num_workers = 1
queue = "local"

[predict.job]
num_workers = 16
queue = "gpu_tesla"

[train_data.roi]
offset = [ 0, 0, 0, 0,]
shape = [ 270, 205, 512, 512,]

[test_data.roi]
offset = [ 0, 0, 0, 0,]
shape = [ 270, 205, 512, 512,]

[validate_data.roi]
offset = [ 0, 0, 0, 0,]
shape = [ 270, 205, 512, 512,]

[train.augment.elastic]
control_point_spacing = [ 5, 25, 25,]
# control_point_spacing = [ 3, 15, 15,]
jitter_sigma = [ 1, 1, 1,]
rotation_min = -45
rotation_max = 45
rotation_3d = false
subsample = 4
use_fast_points_transform = true

[train.augment.zoom]
factor_min = 0.75
factor_max = 1.5
spatial_dims = 2

[train.augment.shift]
prob_slip = 0.2
prob_shift = 0.2
sigma = [ 0, 4, 4, 4,]

[train.augment.intensity]
scale = [ 0.9, 1.1,]
shift = [ -0.001, 0.001,]

[train.augment.simple]
mirror = [ 2, 3,]
transpose = [ 2, 3,]

# # check snapshots per dataset for good value!
# # maybe just use speckle (multiplicative gaussian noise)
# # instead of this (additive gaussian noise)
# [train.augment.noise_gaussian]
# var = [ 0.001,]

[train.augment.noise_saltpepper]
amount = [ 0.0001,]

[train.augment.noise_speckle]
var = [ 0.05,]

[train.augment.histogram]
range_low = 0.1
range_high = 1.0
